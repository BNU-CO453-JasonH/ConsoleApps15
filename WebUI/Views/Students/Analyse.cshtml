@model ConsoleAppProject.App03.StudentGrades
@using ConsoleAppProject.App03
@{
    ViewData["Title"] = "Analyse Grades";
}

<header class="text-center jumbotron justify-content-center">
    <h1>Analyse Grades</h1>
    <h2>by Jason Huggins</h2>
    <p>
        Based on the students' marks, simple stats are shown
        as well as a percentage of the students attaining each
        grade.
    </p>
</header>
@{
    int first = 0;
    int secondUpper = 0;
    int secondLower = 0;
    int third = 0;
    int failed = 0;
    int noGrade = 0;
    int marks = 0;

    foreach (var item in Model.Marks)
    {
        if (item >= 70 && item <= 100)
        {
            first++;
        }
        else if (item >= 60 && item < 70)
        {
            secondUpper++;
        }
        else if (item >= 50 && item < 60)
        {
            secondLower++;
        }
        else if (item >= 40 && item < 50)
        {
            third++;
        }
        else if (item == 0)
        {
            noGrade++;
        }
        else
        {
            failed++;
        }
    }

    marks = marks / Model.Marks.Count();
}
<script type="text/javascript" src="https://www.gstatic.com/charts/loader.js"></script>
<script type="text/javascript">
      google.charts.load('current', {'packages':['corechart']});
      google.charts.setOnLoadCallback(drawChart);

      function drawChart() {

        var data = google.visualization.arrayToDataTable([
          ['Grades', 'No. of students'],
          ['Grade A', @first],
          ['Grade B', @secondUpper],
          ['Grade C', @secondLower],
          ['Grade D', @third],
          ['Failed', @failed],
          ['No Grade', @noGrade]
        ]);

        var options = {
            title: 'Student Grades data based on @Model.Students.Length students. '
                + 'Average student mark: @Model.Mean.ToString("0.0")'
        };

        var chart = new google.visualization.PieChart(document.getElementById('piechart'));

        chart.draw(data, options);
      }
</script>
<section>
    <h2>Statistics</h2>
    <table class="table table-bordered table-hover">
        <thead>
            <tr class="text-center table-success">
                <th>No. of Students</th>
                <th>Min. Mark</th>
                <th>Max. Mark</th>
                <th>Mean Mark</th>
            </tr>
        </thead>
        <tbody>
            <tr class="text-center">
                <td>@Model.Students.Length</td>
                <td>@Model.Minimum</td>
                <td>@Model.Maximum</td>
                <td>@Model.Mean.ToString("0.0")</td>
            </tr>
        </tbody>
    </table>
</section>
<section>
    <h2>Grade Profile</h2>
    <table class="table table-bordered table-hover">
        <thead>
            <tr class="text-center table-info">
                <th>Fail</th>
                <th>Grade D</th>
                <th>Grade C</th>
                <th>Grade B</th>
                <th>Grade A</th>
            </tr>
        </thead>
        <tbody>
            <tr class="text-center">
                @foreach (int count in Model.GradeProfile)
                {
                    double percent = (double)count / Model.Marks.Length;
                    <td>@percent.ToString("0.0%")</td>
                }
            </tr>
        </tbody>
    </table>
</section>
<div id="piechart" style="width: 900px; height: 500px;"></div>
